{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  counterShow: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter(state) {\n      state.counterShow = !state.counterShow;\n    }\n\n  }\n}); // const counterReducer=(state= initialState,action)=>{\n//     if(action.type==='increment'){\n//         return {\n//             counter: state.counter+1,\n//             counterShow: state.counterShow\n//         };\n//     };\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter-1,\n//             counterShow: state.counterShow\n//         };\n//     };\n//     if(action.type==='increase'){\n//         return {\n//             counter: state.counter + action.amount,\n//             counterShow: state.counterShow\n//         };\n//     };\n//     if(action.type==='toggleCounter'){\n//         return {\n//             counter: state.counter,\n//             counterShow: !state.counterShow\n//         };\n//     }; \n//     return state;\n// };\n// const store = createStore();\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"sources":["/Users/rushikeshpharate/Desktop/Projects/React/Udemy/01-starting-project 6/src/store/index.js"],"names":["createSlice","configureStore","initialState","counter","counterShow","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer"],"mappings":"AACA,SAASA,WAAT,EAAqBC,cAArB,QAA2C,kBAA3C;AAEA,MAAMC,YAAY,GAAE;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAApB;AAGA,MAAMC,YAAY,GAAIL,WAAW,CAAC;AAC9BM,EAAAA,IAAI,EAAE,SADwB;AAE9BJ,EAAAA,YAAY,EAAEA,YAFgB;AAG9BK,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAAEC,KAAF,EAAS;AACdA,MAAAA,KAAK,CAACN,OAAN;AACH,KAHI;;AAILO,IAAAA,SAAS,CAAED,KAAF,EAAS;AACdA,MAAAA,KAAK,CAACN,OAAN;AACH,KANI;;AAOLQ,IAAAA,QAAQ,CAAEF,KAAF,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,MAAvC;AACH,KATI;;AAULC,IAAAA,aAAa,CAAEL,KAAF,EAAS;AAClBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACH;;AAZI;AAHqB,CAAD,CAAjC,C,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;;AAEA,MAAMW,KAAK,GAAGd,cAAc,CAAC;AACzBe,EAAAA,OAAO,EAAEX,YAAY,CAACW;AADG,CAAD,CAA5B;AAIA,eAAeD,KAAf","sourcesContent":["\nimport { createSlice,configureStore } from '@reduxjs/toolkit';\n\nconst initialState= {counter: 0, counterShow: true};\n\n\nconst counterSlice  = createSlice({\n    name: 'counter',\n    initialState: initialState,\n    reducers:{\n        increment (state) {\n            state.counter++;\n        },\n        decrement (state) {\n            state.counter--;\n        },\n        increase (state,action) {\n            state.counter = state.counter + action.amount;\n        },\n        toggleCounter (state) {\n            state.counterShow = !state.counterShow;\n        }\n    }\n});\n\n\n// const counterReducer=(state= initialState,action)=>{\n//     if(action.type==='increment'){\n//         return {\n//             counter: state.counter+1,\n//             counterShow: state.counterShow\n//         };\n//     };\n\n\n//     if(action.type==='decrement'){\n//         return {\n//             counter: state.counter-1,\n//             counterShow: state.counterShow\n//         };\n//     };\n\n//     if(action.type==='increase'){\n//         return {\n//             counter: state.counter + action.amount,\n//             counterShow: state.counterShow\n//         };\n//     };\n\n//     if(action.type==='toggleCounter'){\n//         return {\n\n//             counter: state.counter,\n//             counterShow: !state.counterShow\n//         };\n//     }; \n\n//     return state;\n// };\n\n\n// const store = createStore();\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n});\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}